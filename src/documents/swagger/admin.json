{
  "openapi": "3.0.0",
  "info": {
      "version": "1.0.0",
      "title": "API Documents For Admins",
      "description": "A minimal and easy to follow example of what you need to create a CRUD style API in NodeJs using TypeScript",
      "license": {
          "name": "Wynnsoft",
          "url": "https://www.wynnsoft-solution.com/"
      }
  },
  "servers": [
      {
          "url": "http://192.168.1.54:7000",
          "description": "API from Darkzone"
      }
  ],
  "tags": [
      {
          "name": "Cats",
          "description": "API for cats in the system"
      },
      {
          "name": "Dogs",
          "description": "API for dogs in the system"
      },
      {
          "name": "King",
          "description": "API for king in the system"
      }
  ],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
      "/cats/{id}": {
          "parameters": [
              {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "description": "ID of the cat that we want to match",
                  "type": "string"
              }
          ],
          "get": {
              "tags": [
                  "Cats"
              ],
              "summary": "Get cat with given ID",
              "parameters": [
                  {
                      "in": "path",
                      "name": "id",
                      "required": true,
                      "description": "Cat with id",
                      "schema": {
                          "$ref": "#/definitions/id"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Cat"
                      }
                  },
                  "404": {
                      "description": "Failed. Cat not found."
                  }
              }
          },
          "put": {
              "summary": "Update cat with given ID",
              "tags": [
                  "Cats"
              ],
              "requestBody": {
                  "description": "Cat Object",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/definitions/Cat"
                          }
                      }
                  }
              },
              "parameters": [
                  {
                      "in": "path",
                      "name": "id",
                      "required": true,
                      "description": "Cat with new values of properties",
                      "schema": {
                          "$ref": "#/definitions/id"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/Cat"
                      }
                  },
                  "400": {
                      "description": "Failed. Bad post data."
                  },
                  "404": {
                      "description": "Failed. Cat not found."
                  }
              }
          },
          "delete": {
              "summary": "Delete cat with given ID",
              "tags": [
                  "Cats"
              ],
              "parameters": [
                  {
                      "in": "path",
                      "name": "id",
                      "required": true,
                      "description": "Delete Cat with id",
                      "schema": {
                          "$ref": "#/definitions/id"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "OK",
                      "schema": {
                          "$ref": "#/definitions/id"
                      }
                  },
                  "404": {
                      "description": "Failed. Cat not found."
                  }
              }
          }
      },
      "/api/king": {
        "get": {
            "tags": [
                "King"
            ],
            "summary": "Get all king in system",
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/King"
                    }
                }
            }
        },
        "post": {
            "tags": [
                "King"
            ],
            "summary": "Create a new king in system",
            "requestBody": {
                "description": "King Object",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/definitions/King"
                        }
                    }
                }
            },
            "produces": [
                "application/json"
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/id"
                    }
                },
                "400": {
                    "description": "Failed. Bad post data."
                }
            }
        }
      }
  },
  "definitions": {
      "id": {
          "properties": {
              "uuid": {
                  "type": "string"
              }
          }
      },
      "Cat": {
          "type": "object",
          "properties": {
              "genus": {
                  "type": "string"
              },
              "name": {
                  "type": "string"
              },
              "isHungry": {
                  "type": "boolean"
              },
              "lastFedDate": {
                  "type": "string"
              }
          }
      },
      "Cats": {
          "type": "object",
          "properties": {
              "cats": {
                  "type": "object",
                  "additionalProperties": {
                      "$ref": "#/definitions/Cat"
                  }
              }
          }
      },
      "King": {
        "type": "object",
        "properties": {
          "position": {
              "type": "string"
          },
          "firstname": {
              "type": "string"
          },
          "lastname": {
              "type": "string"
          },
          "display": {
              "type": "boolean"
          }
        }
    }
  }
}